<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Front End 筆記 Blog</title>
        <link>https://wintersprouter.github.io/frontend-notes/blog</link>
        <description>Front End 筆記 Blog</description>
        <lastBuildDate>Sun, 19 May 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-TW</language>
        <item>
            <title><![CDATA[從 2024 React Conf 看 React Native 發展]]></title>
            <link>https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf</link>
            <guid>https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf</guid>
            <pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[今年的 React Conf 除了眾所矚目的 React 19 ，同時以 meta 開發團隊開發的 React Native 也帶來了不少亮點。有關於 React Native 的討論都集中在第二天的議程。]]></description>
            <content:encoded><![CDATA[<p>今年的 React Conf 除了眾所矚目的 React 19 ，同時以 meta 開發團隊開發的 React Native 也帶來了不少亮點。有關於 React Native 的討論都集中在<a href="https://www.youtube.com/watch?v=0ckOUBiuxVY" target="_blank" rel="noopener noreferrer">第二天的議程</a>。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-architecture-上-beta-了">New Architecture 上 beta 了<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#new-architecture-%E4%B8%8A-beta-%E4%BA%86" class="hash-link" aria-label="New Architecture 上 beta 了的直接連結" title="New Architecture 上 beta 了的直接連結">​</a></h3>
<p>截至 2024 年 3 月 React Native 的在 npm 上的每週下載數突破了220萬，越來越多的開發者使用;同時 React Native 開發團隊也宣布 New Architecture 終於上 beta 了，從 0.68 版本 2022 年 3 月在 React Native 加入了 New Architecture 到現在升級到 0.74 版本後使用 react-native-cli 可以分別在 Android 的 <code>gradle.properties</code> 啟用、iOS 則是在 iOS 的位置執行 <code>bundle install &amp;&amp; RCT_NEW_ARCH_ENABLED=1 bundle exec pod install</code>、使用 Expo 則可以 Expo 51 的設定檔案分別開啟 iOS 跟 Android 是否支援 New Architecture。官方是建議大家可以先玩看看新架構，然後如果有遇到問題的話幫忙回報一下 issue。</p>
<p>至於為什麼要改整個大改呢？這就要回歸到現在 React Native 的架構，目前的 Javascript 用 bridge 的方式和原生構通，透過 JSON 反序列化和序列化經由 bridge 來傳遞訊息，但使用 bridge 來溝通一次只能有一端通過，而且每傳遞一次就要用 JSON 反序列化和序列化來轉換資料，是相當耗費的效能的。</p>
<p>那麼 New Architecture 是如何改善這個問題呢？主要使用 JavaScript Interface（簡稱 JSI ）讓 JavaScript 與原生進行溝通，JSI 是用 C++ 寫的，他使用 memory sharing 的方式讓 JavaScript 層與 native 層溝通，也可以讓 JavaScript 同步運行在 native 層，直接讓 JavaScript 程式碼呼叫原生程式碼的函數，更有效率地去直接溝通原生層。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="官方建議使用-react-native-framework---expo">官方建議使用 React native framework - Expo<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#%E5%AE%98%E6%96%B9%E5%BB%BA%E8%AD%B0%E4%BD%BF%E7%94%A8-react-native-framework---expo" class="hash-link" aria-label="官方建議使用 React native framework - Expo的直接連結" title="官方建議使用 React native framework - Expo的直接連結">​</a></h3>
<p>這次官方也宣布他們改了 <a href="https://reactnative.dev/docs/environment-setup" target="_blank" rel="noopener noreferrer">React native 的官網</a>，從 0.75 開始版本開始，直接建議開發者使用 Framework 來開發，例如：Expo，先針對先前對於 Expo 的原生支援度不足等原因而採用 react-native-cli 作為開發選項的痛點，Expo 這次更新了一些功能以提升開發者體驗：</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="原生的支援">原生的支援<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#%E5%8E%9F%E7%94%9F%E7%9A%84%E6%94%AF%E6%8F%B4" class="hash-link" aria-label="原生的支援的直接連結" title="原生的支援的直接連結">​</a></h4>
<p>對於原生的支援 Expo 提供了</p>
<ul>
<li>
<p>Expo sdk : 提供了一些原生的 api，例如：camera、location、notification...等
<img decoding="async" loading="lazy" alt="Expo sdk " src="https://wintersprouter.github.io/frontend-notes/assets/images/expo-sdk-e3cb8c19f2efe7c715396a8024ccadb2.png" width="1183" height="670" class="img_ev3q"></p>
</li>
<li>
<p>Expo module api : 使用 Expo module api 可以寫自己原生 kotlin、swift 的 module 引入 React-Native 專案</p>
</li>
</ul>
<p><img decoding="async" loading="lazy" alt="Expo module api" src="https://wintersprouter.github.io/frontend-notes/assets/images/expo-module-api-fb9093b0cb12cc0757e08d743cfa8635.png" width="1164" height="651" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="expo-router">expo router<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#expo-router" class="hash-link" aria-label="expo router的直接連結" title="expo router的直接連結">​</a></h4>
<p>採取 file system-based routing 的設計，分別針對 iOS 跟 Android、web 、 tv OS 給出不同的 UX 設計。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="管理原生程式碼">管理原生程式碼<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#%E7%AE%A1%E7%90%86%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BC%8F%E7%A2%BC" class="hash-link" aria-label="管理原生程式碼的直接連結" title="管理原生程式碼的直接連結">​</a></h4>
<p>使用 continuous native generation 管理原生程式碼
<img decoding="async" loading="lazy" alt="cng" src="https://wintersprouter.github.io/frontend-notes/assets/images/cng-72d8cf3d38f7c922634383f399a15cbf.png" width="1800" height="1028" class="img_ev3q"></p>
<p>整體看下來，如果 Expo 這些功能可以解決原生支援度不足、可以整合自己寫原生的引入專案、再加上整合 build 跟 deploy 的平台，整體的開發者體驗相較使用 react-native-cli 來的好很多，如果有用過 Xcode build ipa 檔案或 android command line build apk 檔案、aab 檔案就可以心領神會其中的痛苦～但是我覺得這背後有一個隱憂就是 Expo 是一間私人的公司，會不會當使用者累積到一個量後，使用 Expo 的服務就會新增一些要考量的開發成本？</p>
<p>順道一提，React Conf 的 App 就是使用了 Expo 開發的，當然也有包含上方提及的新功能，都可以在 <a href="https://github.com/expo/react-conf-app" target="_blank" rel="noopener noreferrer">https://github.com/expo/react-conf-app</a> 的 repo 中看到實際的應用。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="多元的開發應用">多元的開發應用<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#%E5%A4%9A%E5%85%83%E7%9A%84%E9%96%8B%E7%99%BC%E6%87%89%E7%94%A8" class="hash-link" aria-label="多元的開發應用的直接連結" title="多元的開發應用的直接連結">​</a></h3>
<p>React native 除了可開發出支援 iOS 、 Android、 Mac OS 、Window 系統的應用程式，React 可以開發這麼多不同的系統，就是基於 react 可以在 Render 階段則是將 Reconciler 時定義好的描述結構轉換使用專屬的 Render 去轉成 Native 的元件。</p>
<p>在這一次的 conf 中可以看到 React native 也可以開發出支援 Apple vision pro 的應用程式，又 Amazon 的工程師也分享了如何 React native 去開發支援 TV OS 系統應用程式的經驗。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="react-native-未來的發展">React native 未來的發展<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#react-native-%E6%9C%AA%E4%BE%86%E7%9A%84%E7%99%BC%E5%B1%95" class="hash-link" aria-label="React native 未來的發展的直接連結" title="React native 未來的發展的直接連結">​</a></h3>
<p>最後 Meta 的 React native 開發團隊分享了未來十年 React native 的開發藍圖：提升 React native 與 Web 的相容性與一致性，確保在不同的平台都有相同開發的體驗，以降低學習曲線。例如：ˋflexboxˋ 這個屬性在 React native 的 styleSheet 跟 CSS 在 web 瀏覽器的應用有一些不同。</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/1-f39879efb2523e4c88cb984c483df8dc.png" width="1798" height="1022" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="react-native-core">React Native core<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#react-native-core" class="hash-link" aria-label="React Native core的直接連結" title="React Native core的直接連結">​</a></h4>
<p>現行的 React Native 使用 React Native Core 將 React Element 轉換成原生的元素。</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/2-e60fbddd91ab766692af3c606e63b888.png" width="1798" height="1012" class="img_ev3q"></p>
<p>在 React Native core 中，Yoga 這個 layout 引擎負責計算 React Native layout 跟 styling 位置，後經過 React Native Runtime 後交由 React Native Renderer 去負責渲染各個平台的視圖，例如： Webview 、UI kit 、 Android ...等。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="react-dom">React DOM<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#react-dom" class="hash-link" aria-label="React DOM的直接連結" title="React DOM的直接連結">​</a></h4>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/3-54c749b19689f10b143747cf940c8104.png" width="1788" height="1014" class="img_ev3q"></p>
<p>React 則是使用 React DOM 將 React Element 繪製成瀏覽器實際 DOM 元素。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="react-strict-dom">React strict DOM<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#react-strict-dom" class="hash-link" aria-label="React strict DOM的直接連結" title="React strict DOM的直接連結">​</a></h4>
<p><img decoding="async" loading="lazy" alt="React strict DOM" src="https://wintersprouter.github.io/frontend-notes/assets/images/4-0649198365807e4d8501ced2682d46e8.png" width="1764" height="998" class="img_ev3q"></p>
<p>為了要提升 React code sharing 以整合 codebase 在 UI 上支援 web 瀏覽器和 VR 介面...等，React strict DOM 就是基於這個目的而開發的，它可以整合 React Native 和 React ，讓 web api 也可以在 React Native 中使用。</p>
<p>例如：</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="unified-styling">Unified Styling<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#unified-styling" class="hash-link" aria-label="Unified Styling的直接連結" title="Unified Styling的直接連結">​</a></h5>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> css </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"react-strict-dom"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> styles </span><span class="token operator">=</span><span class="token plain"> css</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">create</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">container</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token literal-property property">borderTopWidth</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">h1</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">padding</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">backgroundColor</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"#EEE"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">padding</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">div</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">paddingTop</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">50</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">backgroundColor</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"#000"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="複製程式碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以把 web css api 支援到 React Native ，像是偽元素、 media query。</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="unified-markup">Unified markup<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#unified-markup" class="hash-link" aria-label="Unified markup的直接連結" title="Unified markup的直接連結">​</a></h5>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> html </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"react-strict-dom"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">html.div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">style</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 121, 198)">container</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">html.h1</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">style</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 121, 198)">h1</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">title</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">html.h1</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">html.div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">style</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 121, 198)">content</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">html.div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">html.div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="複製程式碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以在 React Native 中去使用 HTML 開發 web 。</p>
<p><img decoding="async" loading="lazy" src="https://user-images.githubusercontent.com/239676/205388313-e58f8793-51cd-4a6e-86e7-89425fd2d0e1.png" alt="" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a href="https://wintersprouter.github.io/frontend-notes/blog/2024-react-conf#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論的直接連結" title="結論的直接連結">​</a></h4>
<p>React strict DOM 最終的目的是讓 codebase 整合成一個，但是共享整個 codebase 跨平台並非主要的目標，應該是合理的去共享這些 code，這樣才可以花更多時間在處理各個平台的不同 UI 細節，而未來新的 web 功能將隨著時間的推移發佈到 React Native ，以提升 web 的相容性。</p>
<p>目前使用 React 開發 web 跟使用 React Native 開發 app 的體驗是截然不同的，在樣式方面 web 使用 css api、React Native 則是使用 styleSheet；同樣是寫 JSX 的標籤 react 不需要引用、React Native 則是需要從 React Native module 引入 component ，再加上其實有很多支援瀏覽器的屬性現階段在 React Native 是不支援的。</p>
<p>透過 React strict DOM 的開發可以看見開發團隊欲將 React 的生態系整合的決心，如果真的可以將 web 的 api 都可以整合到 React Native 中，那麼就可以真正的實踐 Learn once, write anywhere. ，目前看起來整合的複雜度很高、要解決的問題也不少，還需要一段時間等待。</p>
<p>有關於 React strict DOM 的討論可以參考這個 [RFC: React DOM for Native (reduce API fragmentation) ]<a href="https://github.com/react-native-community/discussions-and-proposals/pull/496" target="_blank" rel="noopener noreferrer">https://github.com/react-native-community/discussions-and-proposals/pull/496</a></p>]]></content:encoded>
            <category>2024 ReactConf</category>
            <category>event</category>
            <category>conference</category>
            <category>React Native</category>
        </item>
        <item>
            <title><![CDATA[2023 iThome 鐵人賽頒獎典禮後記]]></title>
            <link>https://wintersprouter.github.io/frontend-notes/blog/2023-ironman-event</link>
            <guid>https://wintersprouter.github.io/frontend-notes/blog/2023-ironman-event</guid>
            <pubDate>Sun, 07 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[第一次參加了而且完成了 it 鐵人賽的挑戰，雖然這次沒有得獎，但好奇頒獎典禮拿獎的都會是什麼樣的人，還有會有什麼有趣的內容、再加上這次組隊的朋友拿獎了，就決定去頒獎典禮看看。]]></description>
            <content:encoded><![CDATA[<p>第一次參加了而且完成了 it 鐵人賽的挑戰，雖然這次沒有得獎，但好奇頒獎典禮拿獎的都會是什麼樣的人，還有會有什麼有趣的內容、再加上這次組隊的朋友拿獎了，就決定去頒獎典禮看看。</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20240106_134049-ce48643fe01600d1b0b2a5a086cc8931.jpg" width="4032" height="3024" class="img_ev3q"></p>
<p>地點好像跟之前幾屆的一樣在輔大的百鍊廳，從校門口走到百鍊廳有點距離，<del>想當初上次來輔大還只是個高中生</del></p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20240106_134000-241fcb6ef61ca4a86450d6f805ecf909.jpg" width="4032" height="3024" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="開箱鐵人鍊成獎團隊鍊成獎">開箱：鐵人鍊成獎＋團隊鍊成獎<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-ironman-event#%E9%96%8B%E7%AE%B1%E9%90%B5%E4%BA%BA%E9%8D%8A%E6%88%90%E7%8D%8E%E5%9C%98%E9%9A%8A%E9%8D%8A%E6%88%90%E7%8D%8E" class="hash-link" aria-label="開箱：鐵人鍊成獎＋團隊鍊成獎的直接連結" title="開箱：鐵人鍊成獎＋團隊鍊成獎的直接連結">​</a></h2>
<p>到了報到處，拿到了一個神秘的紙袋，裡面包含了頒獎典禮的與會吊牌，還有鐵人賽的獎狀、跟個人完賽與團賽的獎牌跟一個鐵人鍊成的紀念卡套，喔，如果有得獎的話，鐵人鍊成獎牌就要上台領獎的時候才會拿到有包含獎項名字的獎牌。（基本上，如果沒得獎的話領完就可以走了（？</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20240106_172410-a84cedd8add85c511983692b74565a0b.jpg" width="3414" height="2561" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20240107_155321-57ea29f71de09cfbf79e613b3b8f4413.jpg" width="4032" height="2268" class="img_ev3q"></p>
<p>很特別的是卡套的裡面放了一張卡片，掃了 QRcode 就可以連結到自己的鐵人賽文章。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="頒獎典禮入場">頒獎典禮入場<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-ironman-event#%E9%A0%92%E7%8D%8E%E5%85%B8%E7%A6%AE%E5%85%A5%E5%A0%B4" class="hash-link" aria-label="頒獎典禮入場的直接連結" title="頒獎典禮入場的直接連結">​</a></h2>
<p>場地不大，有點糟的是裡面完全收不到訊號，沒網路好焦慮～
開場後就是一些重要的嘉賓致詞、評審致詞、然後冠軍得獎者致詞以下省略...</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20240106_140200-24d7d64f59a2bedd754937e7fb5eacc5.jpg" width="4032" height="3024" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="頒發佳作獎" src="https://wintersprouter.github.io/frontend-notes/assets/images/20240106_154646-c583758f7cb07f2ce1657683d007ba8c.jpg" width="4032" height="2268" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="收穫">收穫<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-ironman-event#%E6%94%B6%E7%A9%AB" class="hash-link" aria-label="收穫的直接連結" title="收穫的直接連結">​</a></h2>
<p>整場頒獎典禮下來，對我來說最有用的就是評審與一些得獎者講述了<strong>撰寫鐵人賽的幾個重要的技巧</strong>:</p>
<ul>
<li>1.平常的時候就可以多搜集幾個素材，就可以此畫出一個架構延伸內容。</li>
<li>2.文章寫完一定要重新讀過一遍。</li>
<li>3.圖片的比例大小會影響閱讀文章的感受。</li>
<li>4.文章是要寫給別人閱讀的，所以字字句句需要能夠清楚表達所要傳達資訊。</li>
<li>5.最棒的題材就是你的實務經驗。</li>
</ul>
<p>蠻有趣的是，評審有提到這次有用 ChatGpt 分析參賽者的文章做為評分的參考 XD 也有人提到他們可以辨別文章是不是 ChatGpt
寫的，方法就是看看文章有沒有錯別字，因為 it 人國文都不太好，文章多少都會有錯別字 XD</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="感想">感想<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-ironman-event#%E6%84%9F%E6%83%B3" class="hash-link" aria-label="感想的直接連結" title="感想的直接連結">​</a></h2>
<p>看完頒獎典禮，真心的覺得這些得獎的人真的好強，好幾個人同時報了兩組還都有拿到獎，不禁懷疑這些人都不用睡嗎？！也有人第一次參賽就拿冠軍的超厲害！</p>
<p>老實說，我覺得要連續不中斷寫 30 天文章(而且能兼顧文章品質的)真的太痛苦了～幸好這次是組團參加，不然我一定撐不下去的，但是藉由這次的經驗讓我好好重新把過去開發時沒弄清楚的觀念重新整理過，也是個很不錯的收穫！</p>
<p>下一屆如果要參加的話，我應該會先把整體的架構先理清楚，早一點把一些內容整理好，希望到時候我可以有時間參加。</p>
<p>這麼『痛苦』的經驗，我推薦各位工程師有機會務必要體驗一下哈哈，除了體驗將知識內化的過程，還有提升自己寫能<strong>讓別人看得懂</strong>的文件的能力。</p>]]></content:encoded>
            <category>2023 鐵人賽</category>
            <category>event</category>
        </item>
        <item>
            <title><![CDATA[Web Conf 2023 心得與收穫]]></title>
            <link>https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf</link>
            <guid>https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf</guid>
            <pubDate>Sun, 13 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[---]]></description>
            <content:encoded><![CDATA[<hr>
<p><img decoding="async" loading="lazy" alt="2023 Web Conf" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230811_131223-82a7aae819fc6bfd2f24a9dbcd1fd2da.jpg" width="1477" height="1108" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="2023 Web Conf" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230811_084509-146a89faf17188b2f313e43cb549d300.jpg" width="1108" height="1477" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="參加的動機">參加的動機<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E5%8F%83%E5%8A%A0%E7%9A%84%E5%8B%95%E6%A9%9F" class="hash-link" aria-label="參加的動機的直接連結" title="參加的動機的直接連結">​</a></h2>
<p>一直以來沒有參加過這種大型付費的 conference，又聽說這是睽違十年後再次舉辦 的 webConf ，所以就算現在幾乎都在開發 APP 還是想來看看，畢竟 Web 領域是我剛轉職時主要學的。況且學習前端技術的過程中，讀過不少這次議程講者的書籍或文章，甚至是課程，參加這個活動某種程度上是偶像見面會的概念（？另外，就是想透過這次的 conf 知道現在外面主流開發的方式與技術是什麼？</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230813_162936-d81789345afd1677ade791aafcfe5e48.jpg" width="1477" height="1108" class="img_ev3q"></p>
<small><p>剛好之前買過的書都有擔任這次活動的講者，另外 PJ 、Summer
的文章在我學習前端的過程中也幫助我不少</p></small>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="會後的感受">會後的感受<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E6%9C%83%E5%BE%8C%E7%9A%84%E6%84%9F%E5%8F%97" class="hash-link" aria-label="會後的感受的直接連結" title="會後的感受的直接連結">​</a></h2>
<p><em>可以說是既興奮又焦慮，但焦慮的部分多了一些。</em></p>
<p>得到了很多新的觀點跟技術，以及開發想法的啟發，這些都讓我感到很興奮，前端的講者都很有料！3400 元值回票價！但同時又覺得憂慮，這兩天議程下來得到技術和工具超多，越知道更多的新知識，越覺得自己對這個領域的認知好渺小（能力也是，一時之間不知道可不可以吸收完這些大神的精華？AI 目前在程式開發的應用，所增進的開發體驗有限，但未來的發展可以說是指日可待，會不會哪一天就不需要工程師了？哇～原來別的開發團隊原來都是利用這些 CICD工具去提升開發的效率，增進團隊溝通，為啥自己待的開發團隊什麼都沒做？</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="收穫">收穫<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E6%94%B6%E7%A9%AB" class="hash-link" aria-label="收穫的直接連結" title="收穫的直接連結">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="前端工程師的不同樣貌">前端工程師的不同樣貌<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E4%B8%8D%E5%90%8C%E6%A8%A3%E8%B2%8C" class="hash-link" aria-label="前端工程師的不同樣貌的直接連結" title="前端工程師的不同樣貌的直接連結">​</a></h3>
<p>雖然職稱都掛著前端工程師，但每一個前端工程師所著重的技術都不太一樣，在這次議程的主講者中，有的就是著重於網頁互動設計、WebGL、動態特效&nbsp;; 有的著重於 Frontend Infra 前端基礎建設，也就是前端架構師&nbsp;; 有的則是網頁產品開發&nbsp;; 我自己也算是個蠻異類的前端，主要的技能樹都點在 React Native APP 跨平台開發。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發者體驗dev-experience的重要性">開發者體驗(Dev Experience)的重要性<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E9%96%8B%E7%99%BC%E8%80%85%E9%AB%94%E9%A9%97dev-experience%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7" class="hash-link" aria-label="開發者體驗(Dev Experience)的重要性的直接連結" title="開發者體驗(Dev Experience)的重要性的直接連結">​</a></h3>
<p>兩天的議程下來，不同的講者分別都強調了開發者體驗的重要性，很多時候我們在開發產品時很重視使用者體驗(User Experience)，往往忽略了開發者體驗(Dev Experience) ，然而開發者體驗可以帶給開發團隊的好處是提升開發效率和產品產量，當然也可以減少重複造輪子。在 Kyle 和 PJ 的分享中分享了不少關於如何在產品開發的過程中加入工具去提升團隊開發的品質，例如：CI/CD pipeline 優化的工具、利用透過 Script 或 Hooks 去自動化團隊專案的 Coding Style 讓機器人去擋下不符合規範的提交，也可以減少直接對人糾正的尷尬。在 Summer 的分享中則是怎麼樣去衡量網頁效能，並且利用 Sentry 去追蹤與記錄問題、觀察使用者的操作情況，進而打造一個自動化的效能系統，提升產品的穩定度。（以上的內容都很精彩，詳細的分享文章我整理在下方。）</p>
<p>不過，要如何去應用這些工具和制定流程，主要還是要看開發團隊的文化和業務情況，依照不同的情境導入相對合適的工具，才會對整體開發體驗產生良好的影響，否則就失去了提升開發效率的美意了。
我也要好好的去思考有哪些工具可以放入我的專案中了～</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="前端技術迭代速度好快快到學不動了">前端技術迭代速度好快，快到學不動了<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E5%89%8D%E7%AB%AF%E6%8A%80%E8%A1%93%E8%BF%AD%E4%BB%A3%E9%80%9F%E5%BA%A6%E5%A5%BD%E5%BF%AB%E5%BF%AB%E5%88%B0%E5%AD%B8%E4%B8%8D%E5%8B%95%E4%BA%86" class="hash-link" aria-label="前端技術迭代速度好快，快到學不動了的直接連結" title="前端技術迭代速度好快，快到學不動了的直接連結">​</a></h3>
<p>剛轉職時有寫過一段時間的 Vue2 + Vuex ，後來都在寫 React 就快把 Vue 忘光了，趁著這次 Kuro 分享 Vue.js 的狀態管理模式，稍微的快速複習了 Vue ，發現 Vue 3 的 compostion api 在處理狀態和重用邏輯的部分與 React 的 hook 相似，看起來貌似比 Vue2 好寫多了。在狀態管理的部分以前用 Vuex 處理全域狀態都要透過從 Vuex 的 store state 拿出存放資料拿出來至vue compomnent =&gt; 若有非同步處理則還需要從 compomnent 更新觸發 Action =&gt;Action 函數中調用 commit 方法來觸發 Mutations=&gt; 更新 Vuex 中的狀態，一連串的要更新一個狀態需要很多繁瑣的步驟，反之，在 Vue 3 官文文件中直接將全域的狀態更新工具改成了 Pinia ，語法操作更簡單，取消了 mutation，跟 TypeScript 整合度更好。真是感嘆前端技術迭代太快了～沒想到不到兩年的時間又有更新更好用的東西，也不知道多久後又會有新的技術出來取而代之呢？</p>
<p>剛好聽到幾個講者在講十年前專精於 Flash 的技術（老實說我是第一次聽到，原來十年前的前端是要點的技能是這個），但現在的瀏覽器的都不支援了，就更有感。或許，身為開發者都要有這樣的覺悟：這一行本來就是沒辦法只學某幾種技術就能一輩子以此為生，也不是說舊的技術不好，一定會有公司需要人維護（除非就像 flash 死透了），但如果能 open mind 去學習新的技術，在職涯的路上選擇會比較寬闊。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="原生-html-element--web-api--css就很好用">原生 HTML element + Web api + CSS&nbsp;就很好用<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E5%8E%9F%E7%94%9F-html-element--web-api--css%E5%B0%B1%E5%BE%88%E5%A5%BD%E7%94%A8" class="hash-link" aria-label="原生 HTML element + Web api + CSS&nbsp;就很好用的直接連結" title="原生 HTML element + Web api + CSS&nbsp;就很好用的直接連結">​</a></h3>
<p>做表單 Form 一直是我覺得前端處理很麻煩的部分，又要透過 DOM 取值做資料驗證，又要顧及使用者體驗。Paul 在分享中，展示了許多用 HTML 原生 element 、CSS 、web api 的就可以處理的功能。例如：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color" target="_blank" rel="noopener noreferrer">CSS: accent-color</a> 可以直接改某些 HTML element 的顏色</li>
</ul>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">HTML</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">input</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">checkbox</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">input</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">range</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">progress</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">progress</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="複製程式碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>
<p>form 驗證可以使用<a href="https://developer.mozilla.org/en-US/docs/Web/API/ValidityState" target="_blank" rel="noopener noreferrer">ValidityState web api</a>處理</p>
</li>
<li>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:has" target="_blank" rel="noopener noreferrer">CSS &gt;&nbsp;<!-- -->:has<!-- -->()</a>可以判斷是否顯示 element ，不需要透過 Javascript event 監聽</p>
</li>
</ul>
<p>HTML 本身的屬性就可以做到基本 Type 檢查，搭配 Web api ，就可以避免使用 Javascript 去處理，減少效能浪費，更讚的是，可以輕鬆的延續使用者的體驗。</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="逛攤位的戰利品">逛攤位的戰利品<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E9%80%9B%E6%94%A4%E4%BD%8D%E7%9A%84%E6%88%B0%E5%88%A9%E5%93%81" class="hash-link" aria-label="逛攤位的戰利品的直接連結" title="逛攤位的戰利品的直接連結">​</a></h2>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230811_132426-908e707959d03c73d4f37b3e80b2e585.JPG" width="1108" height="1477" class="img_ev3q"></p>
<p>我蠻喜歡去搜集貼紙的，趁機搜刮了一些貼紙～還在六角的攤位玩了一個心理測驗，測出來的結果是：</p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230811_130550-a17bc86b619411f2f7b59629102d741a.jpg" width="706" height="523" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230813_165751-f2a5c873d58698ab3112b510c508863f.jpg" width="1108" height="1477" class="img_ev3q"></p>
<p>在天瓏的攤位用便宜的價錢入手了這本書，對這本書的印象是在星巴哥的技術專欄上看到有關這本書重構技巧的分享，希望我有時間可以看完它。</p>
<hr>
<p>最後，分享覺得整場最有道理的一句話：</p>
<h2><img decoding="async" loading="lazy" src="https://wintersprouter.github.io/frontend-notes/assets/images/20230811_155716-917e2b9f4619cd691f96fbf1cbd273a5.jpg" width="541" height="331" class="img_ev3q"></h2>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="講者分享連結整理">講者分享連結整理<a href="https://wintersprouter.github.io/frontend-notes/blog/2023-web-conf#%E8%AC%9B%E8%80%85%E5%88%86%E4%BA%AB%E9%80%A3%E7%B5%90%E6%95%B4%E7%90%86" class="hash-link" aria-label="講者分享連結整理的直接連結" title="講者分享連結整理的直接連結">​</a></h2>
<ul>
<li>
<p><a href="https://hackmd.io/@webconf/BkImQ0Ds3/%2FwHBNj8NPQamxPecU9VXoHQ" target="_blank" rel="noopener noreferrer">大會共筆</a></p>
</li>
<li>
<p><a href="https://drive.google.com/file/d/1W7KZ2vwsZyyIC_iMdCxgadXWodWkrU6u/view?fbclid=IwAR0lAS-jXIksFcd08w9gGWJnZGPvHKTN_7n_z1fQDf8koHyQ52EiRawRpmk" target="_blank" rel="noopener noreferrer">Will 保哥/活用 GitHub Copilot 開發 Web 應用程式 PPT</a></p>
</li>
<li>
<p><a href="https://onedrive.live.com/?authkey=%21APB1fAuO9FcMusg&amp;id=68B24674607C69D9%21349589&amp;cid=68B24674607C69D9" target="_blank" rel="noopener noreferrer">Ruddy 老師/AI 驅動下的開發者體驗 PPT</a></p>
</li>
<li>
<p><a href="https://speakerdeck.com/milkmidi/webcomponent" target="_blank" rel="noopener noreferrer">奶綠茶/WebComponent 的好，用過的都知道 PPT</a></p>
</li>
<li>
<p><a href="https://slides.com/oldmo860617/minimal" target="_blank" rel="noopener noreferrer">莫力全(Kyle Mo)/成為前端建築師吧！透過 Frontend Infra 為前端應用打造穩健且高效率的開發體驗 PPT</a>、<a href="https://oldmo860617.medium.com/%E6%88%90%E7%82%BA%E5%89%8D%E7%AB%AF%E5%BB%BA%E7%AF%89%E5%B8%AB%E5%90%A7-%E9%80%8F%E9%81%8E-frontend-infra-%E7%82%BA%E5%89%8D%E7%AB%AF%E6%87%89%E7%94%A8%E6%89%93%E9%80%A0%E7%A9%A9%E5%81%A5%E4%B8%94%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E9%96%8B%E7%99%BC%E9%AB%94%E9%A9%97-21566b5c95d3" target="_blank" rel="noopener noreferrer">文章</a></p>
</li>
<li>
<p><a href="https://blockstudio.tw/blog/blog-web-animation-sop" target="_blank" rel="noopener noreferrer">李明/穿越互動特效網站演化的軌跡 參考文章</a></p>
</li>
<li>
<p><a href="https://blog.lalacube.com/mei/Reveal_phoenix_the_gokui.php?page=1" target="_blank" rel="noopener noreferrer">Paul Li / 鳳‧極意？！</a></p>
</li>
<li>
<p><a href="https://www.cythilya.tw/2023/08/12/build-front-end-performance-monitoring-mechanism-from-scratch-webconf-tw-2023/" target="_blank" rel="noopener noreferrer">Summer Tang/從零打造前端效能監測系統逐字稿</a></p>
</li>
<li>
<p><a href="https://hackmd.io/@webconf/BkImQ0Ds3/%2FhOq4Qte_TnSy0z8-dcCuig?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=webconf2023&amp;fbclid=IwAR2DzggADz_M6lyBoJl8Bd87iJmjTYbzJeFvL-wJj3k3YuuszgxdmwSc4rc" target="_blank" rel="noopener noreferrer">小賴/【工作坊】Docker Container 是什麼？可以吃嗎？</a></p>
</li>
<li>
<p><a href="https://drive.google.com/file/d/1MXtx08mLPB4_VTRmMr6Bp9pRKY3V2fWm/view?ck_subscriber_id=2283616400&amp;pli=1" target="_blank" rel="noopener noreferrer">Soking/資訊架構設計新體驗：在需求情境中運用領域事件分析描述結構化內容</a>
以上是我自己有聽的場次＆講者有分享資料的</p>
</li>
</ul>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>備註</div><div class="admonitionContent_BuS1"><p>本篇文章原先發佈於<a href="https://wwwwwwwe.medium.com/2023-web-conf-%E5%BF%83%E5%BE%97%E8%88%87%E6%94%B6%E7%A9%AB-e1dba2cb5909" target="_blank" rel="noopener noreferrer">Medium</a>，之後會陸續將 Medium 撰寫的內容慢慢遷移到這個網站。</p></div></div>]]></content:encoded>
            <category>2023 WebConf</category>
            <category>event</category>
            <category>conference</category>
        </item>
    </channel>
</rss>